name: QA Tag Workflow

on:
  push:
    tags:
      - 'qa*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Configure AWS credentials and Docker Login
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ap-southeast-1
          sudo apt-get remove docker docker-engine docker.io containerd runc          
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com
     
      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Print Runner IP Address
        id: print-ip
        run: |
         echo "Runner IP Address: ${{ steps.ip.outputs.ipv4 }}"
      - name: Whitelist runner IP address
        run: |
         aws ec2 authorize-security-group-ingress \
         --group-id ${{ secrets.DEV_INSTANCE_SG_ID }} \
         --protocol tcp \
         --port 22 \
         --cidr ${{ steps.ip.outputs.ipv4 }}/32   
      - name: Copy Docker Compose file to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.QA_EC2_INSTANCE_IP }}
          username: ${{ secrets.QA_SSH_USERNAME }}
          key: ${{ secrets.QA_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.EC2_INSTANCE_PASSPHRASE }}
          source: docker-compose.yml
          target: /home/${{ secrets.QA_SSH_USERNAME }}/workspace/biometric-service/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
          
      - name: Build and tag Docker image
        run: |
          
          docker build qabiometricservice .
          docker images
          docker tag webhook-service:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest 
        
      - name: Push Docker image to AWS ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest
  
      - name: SSH into EC2 instance and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.QA_EC2_INSTANCE_IP }}
          username: ${{ secrets.QA_SSH_USERNAME }}
          key: ${{ secrets.QA_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.EC2_INSTANCE_PASSPHRASE }}
          script: |
            cd /home/${{ secrets.QA_SSH_USERNAME }}/workspace/biometric-service/
            # Check if the container exists
            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com
             docker-compose pull biometric-service
            docker-compose up -d biometric-service
            # Remove dangling images (if any)
            if [ -n "$(docker images -f 'dangling=true' -q)" ]; then
            docker rmi $(docker images -f "dangling=true" -q) || true  # Ignore errors if images are in use
            fi
      
      - name: revoke runner ip address
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
          --group-id ${{ secrets.DEV_INSTANCE_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32

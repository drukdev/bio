name: Tag Workflow

on:
  create:
    tags:
      - qa-'*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-biolatest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        run: |
          docker -v
          cat /etc/os-release
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set region ap-southeast-1
          aws s3 ls

      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com
          
      
      - name: Build and tag Docker image
        run: |
          docker build -t qabiometricservice .
          docker tag qabiometricservice:latest 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest
          echo 'docker images'
          docker images
          
       
      - name: Push Docker image to AWS ECR
        run: 
          docker push 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest

      - name: SSH into EC2 instance and pull Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.QA_EC2_INSTANCE_IP }}
          username: ${{ secrets.QA_SSH_USERNAME }}
          key: ${{ secrets.QA_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.EC2_INSTANCE_PASSPHRASE }}
          script: |
            docker login -u AWS -p "$(aws ecr get-login-password --region ap-southeast-1)" 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com
            sudo docker stop biolatest || true
            sudo docker rm -f biolatest || true
            sudo docker rmi 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest
            docker pull 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest
            cd /home/ubuntu/workspace/biometric-service
            sudo docker stop biolatest || true
            sudo docker rm -f biolatest || true 
            sudo docker run -d -p 3001:3001 --name biolatest --env-file .env 589943763826.dkr.ecr.ap-southeast-1.amazonaws.com/qabiometricservice:biolatest
            sudo docker rmi $(docker images -f "dangling=true" -q)


      - name: Send Email Notification on Success
        if: success() # Only runs when the job succeeds
        env:
          AWS_DEFAULT_REGION: ap-southeast-1  # Change to your desired AWS region
          EMAIL_FROM: pooja.jagtap@ayanworks.com
          EMAIL_TO_SUCCESS: ${{ secrets.EMAIL_RECIPIENTS }}
        run: |
          echo "Email body content:"
          echo "Environment: QA
                Service: Biometric Service
                Status: Succeeded!" > /tmp/email_body.txt
          cat /tmp/email_body.txt

          echo "Email recipients:"
          echo "$EMAIL_TO_SUCCESS"
          
          IFS=',' read -ra EMAILS <<< "$EMAIL_TO_SUCCESS"
          for email in "${EMAILS[@]}"; do
            email=$(echo "$email" | tr -d ' ')  # Remove any leading/trailing spaces
            echo "Sending email to: $email"
            aws ses send-email \
              --from "$EMAIL_FROM" \
              --to "$email" \
              --subject "Success Notification" \
              --text "$(cat /tmp/email_body.txt)" \
              --region "$AWS_DEFAULT_REGION"
          done


      - name: Send Email Notification on Failure
        if: failure() # Only runs when the job fails
        env:
          AWS_DEFAULT_REGION: ap-southeast-1  # Change to your desired AWS region
          EMAIL_FROM: pooja.jagtap@ayanworks.com
          EMAIL_TO_FAILURE: ${{ secrets.EMAIL_RECIPIENTS }}
        run: |
          echo "Email body content:"
          echo "Environment: QA
                Service: Biometric
                Status: Failed!" > /tmp/email_body.txt
          cat /tmp/email_body.txt

          echo "Email recipients:"
          echo "$EMAIL_TO_FAILURE"
          
          IFS=',' read -ra EMAILS <<< "$EMAIL_TO_FAILURE"
          for email in "${EMAILS[@]}"; do
            email=$(echo "$email" | tr -d ' ')  # Remove any leading/trailing spaces
            echo "Sending email to: $email"
            aws ses send-email \
              --from "$EMAIL_FROM" \
              --to "$email" \
              --subject "Failure Notification" \
              --text "$(cat /tmp/email_body.txt)" \
              --region "$AWS_DEFAULT_REGION"
          done
